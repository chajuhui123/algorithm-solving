# 2688

import sys
input = sys.stdin.readline

# 문제 조건 : 1 <= n <= 64
dp = [[0] * 10 for _ in range(65)]

# 1의 자리수 초기화 => 시작하는 수 각각 하나씩 존재
# 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 => 10개
for i in range(10):
    dp[0][i] = 1

for i in range(1, 65): # i는 자릿 수 (십의 자리부터)
    for j in range(0, 10): # j는 시작하는 수 (0~9)
        for k in range(j, 10): # k는 j로 시작하는 수부터 9까지의 줄어들지 않는 수를 더하기 위한 변수
            # i 자리의 j 로 시작하는 수에 대한 줄어들지 않는 수의 개수는 
            # i - 1 자리의 j로 시작하는 수부터 i-1 자리의 9까지의 줄어들지 않는 수의 개수를 더함
            dp[i][j] += dp[i-1][k]


# print(sum(dp[2 - 1]))
# print(sum(dp[3 - 1]))
# print(sum(dp[4 - 1]))

TC = int(input())

for _ in range(TC):
    n = int(input())
    print(sum(dp[n-1]))

'''
줄어들지 않는 수 : 각 자리수가 왼쪽의 자리 수보다 작거나 같은 경우
규칙이 무엇일까 ?

n이 1인 경우 (일의 자리)
=> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 => 10개

n이 2인 경우 (십의 자리)
=> 0-9 (10개) 이전 자리 수의 0부터 9까지 더한 것과 같음!
=> 11-19 (9개) 이전 자리 수의 1부터 9까지 더한 것과 같음!
=> 22-29 (8개), 33-39(7개) ... 99(1개)
=> 모든 갯수를 더하면 10 + 9 + 8 + ... + 2 + 1 = 55개


따라서 이전 자리 수의 해당 자리 수를 더한 값을 구해보자면? 
(i 현재 자리 수, j 시작하는 특정 값) dp[i][j] = dp[i - 1][j] + dp[i - 1][j + 1] + ... + dp[i - 1][9]

n이 3인 경우 (백의 자리)
=> 220개

n이 4인 경우 (천의 자리)
=> 715개
'''